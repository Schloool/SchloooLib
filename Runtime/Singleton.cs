using UnityEngine;

namespace SchloooLib.Core
{
    public abstract class Singleton<T> : MonoBehaviour where T : MonoBehaviour
    {
        private static T instance;

        public static T Instance
        {
            get
            {
                if (instance != null) return instance;
                
                Debug.LogWarning($"No instance of type {typeof(T)} was added as a component, so it was automatically generated.");
                instance = AutoGenerateScriptInstance();
                DontDestroyOnLoad(instance);

                return instance;
            }
        }

        private static T AutoGenerateScriptInstance()
        {
            GameObject autoGeneratedSingleton = new GameObject($"Auto-Generated {typeof(T)} Instance");
            return autoGeneratedSingleton.AddComponent<T>();
        }
        
        private void Awake()
        {
            if (instance != null) Destroy(instance);

            instance = GetComponent<T>();
            DontDestroyOnLoad(this);
        }
    }
}